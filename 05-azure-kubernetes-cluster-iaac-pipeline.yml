trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# - script: echo K8S Terraform Azure!
#   displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'
- task: TerraformCLI@2
  displayName: 'terraform init' 
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    # commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resorce-manager-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'storageacctawsvams01'
    backendAzureRmContainerName: 'storageacctawsvamscontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'

# - task: TerraformCLI@2
#   displayName: 'terraform apply'
#   inputs:
#     command: 'apply'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#     environmentServiceName: 'azure-resorce-manager-service-connection'
#     commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'

# - task: TerraformCLI@2
#   displayName: 'terraform destroy'
#   inputs:
#     command: 'destroy'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#     environmentServiceName: 'azure-resorce-manager-service-connection'

- task: TerraformCLI@2
  displayName: 'terraform plan'
  inputs:
    command: plan
    environmentServiceName: 'azure-resorce-manager-service-connection'
    commandOptions: '-destroy -out=$(System.DefaultWorkingDirectory)/terraform.tfplan'

- task: TerraformCLI@2
  displayName: 'terraform show'
  inputs:
    command: show
    inputTargetPlanOrStateFilePath: '$(System.DefaultWorkingDirectory)/terraform.tfplan'

# - task: TerraformCLI@2
#   displayName: 'terraform apply tfplan'
#   condition: and(succeeded(), eq(variables['TERRAFORM_PLAN_HAS_DESTROY_CHANGES'], 'false'))
#   inputs:
#     command: apply
#     environmentServiceName: 'azure-resorce-manager-service-connection'
#     commandOptions: '$(System.DefaultWorkingDirectory)/terraform.tfplan'